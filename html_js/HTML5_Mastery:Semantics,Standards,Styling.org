#+TITLE: HTML5 Mastery: Semantics, Standards, and Styling - Notes
#+AUTHOR: Chen Yang(matthias)
#+EMAIL: matthias_cy@outlook.com
* HTML术语和概念
  HTML文档有三大基础构建：元素，属性和文字。
** 元素
   元素就是HTML里的M，用来告诉浏览器如何处理一些内容的标记。每个元素有一个关键字，定义了他们代表的是什么。
   不同的元素定义了不同的行为。
   元素与标签有一些细微的差别。标签是元素的一部分。

   空元素
   在HTML里，空元素（也叫void element）简单的写成<img>、<br>、 <meta>、 <hr>, 不需要结束标签。在
   XHTML、HTML的XML形式里，空元素需要一个空格和斜杠，比如<img/>、<br/>、<meta/>、或者<hr/>，被称之
   为自关闭标签（self-closing tag）。
** 属性
   属性出现在元素的开始标签里，用来改变元素某些方面的行为。可以看作键/值对，比如：
   #+BEGIN_SRC html
   <a href="contact.html">Here is some text that links to a contact page.</p>
   #+END_SRC
** 文档模型（Document Object Model, DOM）
   它是用来以节点树来表示文档的标准方法。节点表示了页面的元素、属性、文字内容。通过分支和树形结构，DOM描
   述了节点怎样连在一起。
* HTML5
** 简介
*** 向后兼容
*** 将浏览器端处理错误的方式标准化
*** 简化doctype
    doctype说明了以何种文档类型定义（Document Type Definition, DTD）
    HTML经常以文档声明（doctype declaration）开始，过去是这样：
    HTML 4.01
    #+BEGIN_SRC html
    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
    #+END_SRC
    或者
    XHTML 1.0
    #+BEGIN_SRC html
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    #+END_SRC
    因为HTML5是向后兼容的，所以只需要说这个页面显示的是HTML，因此doctype被简化为：
    #+BEGIN_SRC html
    <!doctype html>
    #+END_SRC
    为了兼容老HTML生成系统，下面的HTML5声明也是接受的：
    #+BEGIN_SRC html
    <!doctype html SYSTEM "about:legacy-compat">
    #+END_SRC
*** doctype的目的
    1. 告诉用户代理和校验器这个文档是按照什么DTD写的。
    2. 对于实际操作，最重要的是通知浏览器读取文档时用那种方法解析。
       文档的三种解析方式：
       · 非怪异（标准）模式
       · 怪异模式
       · 部分怪异（几乎标准）模式
    浏览器根据doctype字符串的存在、不存在及它的值来确定哪种渲染模式。
*** 简化的字符编码
    HTML5标准强烈建议所有的HTML文档都设置字符编码。推荐的方法是让服务器把它作为响应头部的一部分发送，HTTP Content-Type。
    如果无法实现，可以使用在HTML文档头部的meta元素。
    在HTML 4.01里，meta元素是这样的：
    #+BEGIN_SRC html
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    #+END_SRC
    在HTML5里，这种写法仍然会被向后兼容，但推荐写法更短，并且包含一个新属性 - charset：
    #+BEGIN_SRC html
    <meta charset="uft-8"/>
    #+END_SRC
*** 新的内容模型类别 #<<content-model>>
    内容模型类别（cotent model）用来指定特定HTML元素包含的内容类型。传统上被归为两类：
    块级（block）和行内（inline）
    在HTML5里被扩展到了7个主要类别：
    · 元数据内容（metadata content）
    · 文档流内容（flow content）
    · 区块内容（sectioning content）
    · 标题内容（heading content）
    · 语句内容（phrasing content）
    · 内嵌内容（embedded content）
    · 交互内容（interactive content）
*** 新元素
*** 微数据
*** 内嵌MathML和SVG
*** API
    包括可以通过class来选择元素的JavaScript API。比如：
    #+BEGIN_SRC javascript
    document.getElementByClassName("aClass")[0]
    #+END_SRC
*** 不再遵循SGML
*** 废弃的特性
*** 元素：
|-----------+--------------------------------|
| element   | replacement                    |
|-----------+--------------------------------|
| applet    | embed/object                   |
|-----------+--------------------------------|
| acronym   | abbr                           |
|-----------+--------------------------------|
| bgsound   | audio                          |
|-----------+--------------------------------|
| dir       | ul                             |
|-----------+--------------------------------|
| frame     | iframe/CSS                     |
|-----------+--------------------------------|
| frameset  |                                |
|-----------+--------------------------------|
| noframes  |                                |
|-----------+--------------------------------|
| isindex   | input from form text input     |
|-----------+--------------------------------|
| listing   | pre/code                       |
|-----------+--------------------------------|
| nextid    | global id                      |
|-----------+--------------------------------|
| noembed   | object as subtitution of embed |
|-----------+--------------------------------|
| plaintext | text/plain                     |
|-----------+--------------------------------|
| rb        | directly in ruby element       |
|-----------+--------------------------------|
| strike    | del; s                         |
|-----------+--------------------------------|
| xmp       | code， < %lt > &gt             |
|-----------+--------------------------------|
| basefont  | CSS                            |
|-----------+--------------------------------|
| big       | h1, strong or mark             |
|-----------+--------------------------------|
| blink     | CSS                            |
|-----------+--------------------------------|
| center    |                                |
|-----------+--------------------------------|
| font      |                                |
|-----------+--------------------------------|
| marquee   |                                |
|-----------+--------------------------------|
| multicol  |                                |
|-----------+--------------------------------|
| nobr      |                                |
|-----------+--------------------------------|
| spacer    |                                |
|-----------+--------------------------------|
| Tt        | kbd, var, code or samp         |
|-----------+--------------------------------|
| u         | em, b or mark                  |
|-----------+--------------------------------|
|           |                                |

*** 属性
|----------+--------------------------------------------------------------------------------------|
| element  | discarded property                                                                   |
|----------+--------------------------------------------------------------------------------------|
| a        | charset, coords, datafld, datasrc, methods, name, rev, shape, urn                    |
|----------+--------------------------------------------------------------------------------------|
| area     | nohref                                                                               |
|----------+--------------------------------------------------------------------------------------|
| body     | alink, background, bgcolor,link, marginbottom, marginheight, margin left,            |
|          | marginright, margintop, marginwidth, text, vlink                                     |
|----------+--------------------------------------------------------------------------------------|
| br       | clear                                                                                |
|----------+--------------------------------------------------------------------------------------|
| button   | datafld, dataformatas, datasrc                                                       |
|----------+--------------------------------------------------------------------------------------|
| caption  | align                                                                                |
|----------+--------------------------------------------------------------------------------------|
| col      | align, char, charoff, valign, width                                                  |
|----------+--------------------------------------------------------------------------------------|
| div      | align, datafld, dataformatas, datasrc                                                |
|----------+--------------------------------------------------------------------------------------|
| dl       | compact                                                                              |
|----------+--------------------------------------------------------------------------------------|
| embed    | align, hspace, name, vspace                                                          |
|----------+--------------------------------------------------------------------------------------|
| fieldset | datafld                                                                              |
|----------+--------------------------------------------------------------------------------------|
| form     | accept                                                                               |
|----------+--------------------------------------------------------------------------------------|
| h1 - h6  | align                                                                                |
|----------+--------------------------------------------------------------------------------------|
| head     | profile                                                                              |
|----------+--------------------------------------------------------------------------------------|
| hr       | align, color, noshade, size, width                                                   |
|----------+--------------------------------------------------------------------------------------|
| html     | version                                                                              |
|----------+--------------------------------------------------------------------------------------|
| iframe   | align, allowtransparency, datafld, datasrc, frameborder, hspace, logndesc,           |
|          | marginheight, marginwidth, scrolling, vspace                                         |
|----------+--------------------------------------------------------------------------------------|
| img      | align, border(except if value is 0), datafld, datasrc, hspace, longdesc,             |
|          | lowsrc, name, vspace                                                                 |
|----------+--------------------------------------------------------------------------------------|
| input    | align, datafld, dataformatas, datasrc, hspace, usemap, vspace                        |
|----------+--------------------------------------------------------------------------------------|
| label    | datafld, dataformatas, datasrc                                                       |
|----------+--------------------------------------------------------------------------------------|
| legend   | align, datafld, dataformatas, datasrc                                                |
|----------+--------------------------------------------------------------------------------------|
| li       | type                                                                                 |
|----------+--------------------------------------------------------------------------------------|
| link     | charset, methods, rev, target, urn                                                   |
|----------+--------------------------------------------------------------------------------------|
| menu     | compact                                                                              |
|----------+--------------------------------------------------------------------------------------|
| meta     | scheme                                                                               |
|----------+--------------------------------------------------------------------------------------|
| object   | align, archive, border, classid, code, codebase, codetype, datafls,                  |
|          | dataformatas, datasrc, declare, hspace, stanby, vspace                               |
|----------+--------------------------------------------------------------------------------------|
| ol       | compact                                                                              |
|----------+--------------------------------------------------------------------------------------|
| option   | dataformatas, datasrc, name                                                          |
|----------+--------------------------------------------------------------------------------------|
| p        | align                                                                                |
|----------+--------------------------------------------------------------------------------------|
| pre      | witdth                                                                               |
|----------+--------------------------------------------------------------------------------------|
| script   | event, for, language                                                                 |
|----------+--------------------------------------------------------------------------------------|
| select   | datafld, dataformatas, datasrc                                                       |
|----------+--------------------------------------------------------------------------------------|
| span     | datafld, dataformatas, datasrc                                                       |
|----------+--------------------------------------------------------------------------------------|
| table    | align, backgorund, bgcolor, border(except if value is 1 or ""), cellpadding          |
|          | cellspacing, dataformats, datapagesize, datasrc, frame, rules, summary, width        |
|----------+--------------------------------------------------------------------------------------|
| tbody    | align, background, char, charoff, valign                                             |
|----------+--------------------------------------------------------------------------------------|
| td       | abbr, align, axis, background, bgcolor, char, charoff, height, nowrap, valign, width |
|----------+--------------------------------------------------------------------------------------|
| textarea | datafld, datasrc                                                                     |
|----------+--------------------------------------------------------------------------------------|
| tfoot    | align, background, char, charoff, valign                                             |
|----------+--------------------------------------------------------------------------------------|
| th       | abbr, align, axis, background, bgcolor, char, charoff, height, nowrap, valign, width |
|----------+--------------------------------------------------------------------------------------|
| thead    | align, background, char, charoff, valign                                             |
|----------+--------------------------------------------------------------------------------------|
| tr       | align, background, bgcolor, char, charoff, valign                                    |
|----------+--------------------------------------------------------------------------------------|
| ul       | compact, type                                                                        |
|----------+--------------------------------------------------------------------------------------|
*** 浏览器支持情况
    可以给出支持情况的网站：
    http://caniuse.com
    and
    http://html5test.com
** 元素
*** 全局属性
    所有HTML元素都拥有的全局属性
|-----------------|
| accesskey       |
| class           |
| contenteditable |
| contextmenu     |
| dir             |
| draggable       |
| dropzone        |
| hidden          |
| id              |
| lang            |
| spellcheck      |
| style           |
| tabindex        |
| title           |
| data-*          |
|-----------------|
more: http://www.w3.org/TR/2011/WD-html5-20110525/
**** 可访问性
     用accesskey和tabindex属性可以通过键盘来访问页面元素，对于有行动障碍的用户会有帮助。
     在元素上设置accesskey属性后，就可通过按下键盘上的键来激活元素。

     tabindex，在页面上反复按下Tab，不同的元素将会被聚焦。tabindex从小数字开始
     #+BEGIN_SRC html
     <ul>
       <li><a href="first.html" tabindex="1">First Item Active</a></li>
       <li><a href="third.html" tabindex="3">Third Item Active</a></li>
       <li><a href="second.html" tabindex="2">Second Item Active</a></li>
     </ul>
     #+END_SRC
**** 元数据
     title属性为元素提供了一个参考信息。通常的形式是当鼠标悬浮在一个链接、表单输入框或缩写时，展示一个小提示。
     #+BEGIN_SRC html
     <a href="http://w3.org" title="World Wide Web Consortium">W3C</a>
     #+END_SRC
     当鼠标悬浮到链接文字"W3C"上时，会弹出小提示"World Wide Web Consortium"。

     lang，指定了元素内文本书写语言
     #+BEGIN_SRC html
     <html lang="en">
     #+END_SRC
**** 唯一标识
***** id
      · 每个页面，一个值能且仅能标识一个元素。
***** class
      · 每个页面可以出现多个。
      · 也个特定的class属性可以有多个class名，用空格分隔。
***** 引用
****** CSS
       id前用(#)，class前用(.),像这样：
       #+BEGIN_SRC css
       #about-text { background: blue; }
       .homepage {color: white; }
       #+END_SRC
****** JavaScript
       #+BEGIN_SRC javascript
       document.getElementById("about-text");
       document.getElementByClassName("homepage");
       #+END_SRC
**** 可编辑性
     contenteditable属性用在新的编辑API（Editing API）。编辑API允许对页面内容的实时编辑。
     这个概念是让HTML元素可以被编辑，使网页表单富文本编辑器以及类似应用可以被较容易地创建（例如，用网页来创建富文本的
     博客文章）。
**** 拼写检查
     spellcheck属性，用于指定一个元素是否因该进行拼写检查。
**** 隐藏元素
     hidden属性，用于隐藏和显示HTML元素。这与CSS中 display:none 属性的效果一样。
     下面的HTML和JavaScript片段展示了怎样用hidden来显示和隐藏内容：
     #+BEGIN_SRC html
     <dl id="fox">
       <dt></dt>
       <dd id="latin" hidden>Vulpes vulpes</dd>
     </dl>
     #+END_SRC
     JavaScript增加了在鼠标划过名字时显示隐藏的功能：
     #+BEGIN_SRC javascript
     // ie
     function toggleLatin() {
       var entry = document.getElementById("fox");
       var latin = document.getElementById("latin");
       entry.onmouseover = function() {
         latin.hidden = false;
       };
       entry.onmouseout = function() {
         latin.hidden = true;
       };
     }
     window.onload = toggleLatin();
     #+END_SRC
**** 拖拽
     draggable和dropzone属性是HTML朝着构建应用而不是文档的方向发展的例子。但是当可用时，这些属性允许HTML元素被拖动到
     页面的一个部分并且放置到另一个元素上，剩下的需要JavaScript事件来控制。
**** 样式
     sytle属性用来直接在元素上应用CSS样式。
**** 文字方向
     dir属性用来控制文本流的方向。如果整个文本块使用从右向左排列的语言，那么使用"rtl",代表right-to-left，并且
     在容器元素上使用"ltr",代表left-ro-right，这样，文本和标点都护翻转。
     #+BEGIN_SRC html
     <p dir="rtl">When redered by a brower, this paragraph will apera aligned to the right.</p>
     <p>While this paragraph will not because it lacks a <code>dir</code> attribute.</p>
     #+END_SRC
     CSS的direction属性也提供了相同的功能，可用的值有：
     inherit，ltr，rtl
     然而，不应该使用这样的CSS，因为这种信息应该内嵌在页面本身，这样即使关联的样式表被禁用了，文本的内容仍然可以被确定。
**** 自定义数据
     data-*时多种属性的混合，任何属性名都可以使用来在HTML元素上存储数据。

*** 内容模型类别
    7个类别[[content-model]]
    more:
    [[http://dev.w3.org/html5/spec-author-view/index.html#element-content-categories]]
    [[http://whatwg.org/specs/web-apps/current-work/#element-content-categories]]
**** 根元素（root element）
     html元素，它包含了文档里所有其他的HTML元素，也叫根元素。
     根元素是大量标签可选的元素中的一个。虽然标签可选，但是元素没有被忽略。可选元素如果被省略了，那么会被隐性
     包含（body是个例外，如果没有页面内容，他会被忽略）。比如，以下是一个完全合法的HTML5文档：
     #+BEGIN_SRC html
     <!doctype html><title>Tiny HTML5</title><p>This is a valid HTML5 page!
     #+END_SRC
***** 开始和结束标签可选的HTML元素
| element  | starting tag | ending tag |
|----------+--------------+------------|
| body     | optional     | optional   |
|----------+--------------+------------|
| colgroup | optional     | optional   |
|----------+--------------+------------|
| dd       | essential    | optional   |
|----------+--------------+------------|
| dt       | essential    | optional   |
|----------+--------------+------------|
| head     | optional     | optional   |
|----------+--------------+------------|
| html     | optional     | optional   |
|----------+--------------+------------|
| li       | essential    | optional   |
|----------+--------------+------------|
| optgroup | essential    | optional   |
|----------+--------------+------------|
| option   | essential    | optional   |
|----------+--------------+------------|
| p        | essential    | optional   |
|----------+--------------+------------|
| rp       | essential    | optional   |
|----------+--------------+------------|
| rt       | essential    | optional   |
|----------+--------------+------------|
| tbody    | optional     | optional   |
|----------+--------------+------------|
| td       | essential    | optional   |
|----------+--------------+------------|
| tfoot    | essential    | optional   |
|----------+--------------+------------|
| th       | essential    | optional   |
|----------+--------------+------------|
| thead    | essential    | optional   |
|----------+--------------+------------|
| tr       | essential    | optional   |
|----------+--------------+------------|
***** html元素属性
      除了全局属性外，html元素还有一个新属性：manifest，用在创建离线应用的一个新API中。当使用时，应用的基本功能
      组件可以被缓存在浏览器，这样，如果用户离线并刷新页面，功能仍然可用。
***** 根据HTML5标准检查文档合法性
      访问[[http://html5.validator.nu]] 或 [[http://validator.w3.org]]
      两者都提供了页面，可以根据给出的网站URL、上传HTML文件或直接输入HTML来进行校验。
**** 文档元数据（document metadata）和脚本元素(scripting elements)
     在head根标签后，出现的是head元素的开始标签，它包括文档的元数据元素，其用于指定页面属性，比如浏览器显示的文档标题、
     页面元素的默认URL、字符编码信息，以及外链和内嵌的CSS样式表。
|----------+------+------+-----------+---------+----------+----------+-------------|
| element  | meta | flow | sectionin | heading | phrasing | embedded | interactive |
|----------+------+------+-----------+---------+----------+----------+-------------|
| title    | *    |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| base     | *    |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| meta     | *    | *    |           |         | *        |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| link     | *    | *    |           |         | *        |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| style    | *    | *    |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| script   | *    | *    |           |         | *        |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| noscript | *    | *    |           |         | *        |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
***** 网页信息：title和meta
****** title
      title是唯一的头部必需元素。
      使用得当的文档标题的好处：
      · 更好的搜索引擎排名
      · 更加方便
      · 更好的可用性
****** meta
      meta元素的一个通常作用是设置页面编码，但也经常被用来设置一系列元数据信息和其它指令的键/值对。
      当创建”键“时，meta元素用http-equiv或name两个中的一个，值用cotent来设置。
      #+BEGIN_SRC html
      <!-- defines a set of keywords for the page's content -->
      <meta name="keywords" content="html5, css, javascript, semantic web, web apps"/>

      <!-- refreshes the page every 15 seconds -->
      <meta http-equiv="refresh" content="15"/>
      #+END_SRC
      详细的http-equiv和name属性参考：
      WHATWGPragamaExtensions: [[http://wiki.whatwg.org/wiki/PragmaExtensioins]]
      MetaExtensions wiki: http://wiki.whatwg.org/wiki/MetaExtensions
***** 链接、样式和资源：base，link，style
****** base
       每个文档只能有一个base元素。他应该出现于文档头部，早于任何其他包含URL的元素属性。
       作用:
       减少重复输入相同的根URL。它的两个属性href和target，指定了用的URL和默认目标（可用时）。
       例如，使用target属性说明链接是在新窗口还是在当前窗口中打开。
       比如，在头部出现了：
       #+BEGIN_SRC html
       <base href="http://example.com/portfolio/" target="_blank"/>
       #+END_SRC
       然后在body里有：
       #+BEGIN_SRC html
       <a href="photographs.html">Photography</a>
       #+END_SRC
       那么，点击链接会在新的窗口中找到链接网页。
****** link
       link元素有属性href, rel, media, hreflang, type, sizes，还有全局属性。至少href和rel是常用的。
       href指定了链接的资源的地址（URL），而rel指定了资源的类型。
       将样式表引入页面：
       #+BEGIN_SRC html
       <link href="main.css" rel="stylesheet" type="text/css"/>
       #+END_SRC
****** style
       style元素允许在HTML中直接插入CSS样式规则。
***** 增加行为和后备内容：script和noscript
****** script
       不仅支持直接在HTML文但里写入内嵌客户端JavaScript代码，也允许通过外部文件载入。
****** noscript
       用于在浏览器禁用和不支持脚本时来展示内容。
**** 文档区块元素（document sectioning elemaents）
     在结束head标签后是body的开始标签，它可以包括任何非头部标记。body标签传统上有一些展示属性：
     ground, text, link, vlink, alink
     所有这些属性在HTML4.01中都不建议使用，在HTML5里被标为废弃。这些效果应该通过CSS实现。CSS的
     background-color, color, a:link, a:visited, a:active。
***** 语义区块元素
      在body里出现的第一类元素是那些用于将内容组织成不同逻辑区块的元素。
|------------+------+------+-----------+---------+----------+----------+-------------|
| element    | meta | flow | sectionin | heading | phrasing | embedded | interactive |
|------------+------+------+-----------+---------+----------+----------+-------------|
| section    |      | *    | *         |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| nav        |      | *    | *         |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| article    |      | *    | *         |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| aside      |      | *    | *         |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| h1, h2, h3 |      | *    |           | *       |          |          |             |
| h4, h5, h6 |      |      |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| hgroup     |      | *    |           | *       |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| header     |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| footer     |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| address    |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
**** 内容分组元素（content grouping elements）
     在页面的某一个内容块里，各种区块的组件被划分为段落、列表、图表等。段落里的其他元素将内容分组为比区块更小的单元。
|------------+------+------+-----------+---------+----------+----------+-------------|
| element    | meta | flow | sectionin | heading | phrasing | embedded | interactive |
|------------+------+------+-----------+---------+----------+----------+-------------|
| p          |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| hr         |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| pre        |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| blockquote |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| ol         |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| ul         |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| li         |      |      |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| dl         |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| dt         |      |      |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| dd         |      |      |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| figure     |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| figcaption |      |      |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
| div        |      | *    |           |         |          |          |             |
|------------+------+------+-----------+---------+----------+----------+-------------|
***** 段落：p
      段落p经常被滥用，比如说：
      #+BEGIN_SRC html
      <p>&nbsp</p>
      <p>&nbsp</p>
      <p>&nbsp</p>
      <p>&nbsp</p>
      #+END_SRC
      这种效果完全应该用CSS实现。在内容下增加间隔空间的一个简单的方法是给相关内容增加一个class：
      #+BEGIN_SRC html
      <p class="section">Your content here.</p>
      #+END_SRC
      然后用CSS增加顶部或底部内边距：
      #+BEGIN_SRC css
      .section { padding-bottom: 3em; }
      #+END_SRC
***** 打断内容：hr
      hr元素，或者水平标尺，历来被作为一个展现元素，但是它被重新设计来代表两块内容之间的主题间断。
      hr带有几个属性：size，width, noshade, align,但在HTML5中都被标为废弃，应该用CSS来设置水平标尺样式。
***** 保持格式：pre
      这个效果还可以通过CSS的white-space:pre属性和值来实现。
***** 引用文字：blockquote
      blockquote元素有一个cite属性，让作者可以执行引用的出处。
***** 列表
      当前HTML标准里有三种列表：
      无序列表（ul）、有序列表（ol）、描述列表（dl）

      · 无序列表： 当内容没有特别的序列时。
      · 有序列表： 当内容有某种顺序时。
      · 描述列表： 用来把名字或者属于和值或其他数据联系起来，也就是跟某个对象直接建立关联的的对象集合，比如术语表。

      无序列表除了全局属性外没有其他任何属性。有序列表，有三个额外属性： reversed、start、type
      reversed -- 决定列表的排序方向，布尔属性。
      start -- 让作者可以用1之外的其他数字开始有序列表的序号。
      type -- 可以用来改变列表开头的记号，从十进制数改为罗马数字或者字母。强烈建议用CSS的list-style-type代替。

      Eric Meyer([[http://meyerweb.com/eric/css/edge/menus/demo.html][CSS menus]])

      Russ Weakly, Web Standards Group的主席之一，创建了大量的列表样式，在http://css.maxdesign.com.au 可找到。
      为了避免构建链接列表的麻烦，也值得一试[[http://accessify.com/tools-and-wizards/developer-tools/list-o-matic][Accessify's List-O-Matic]], 这是一个在线列表构建器，可以从
      中选择预先构建好的样式。

      [[http://www.htmldog.com/articles/suckerfish/dropdowns][Patrick Griffiths的Suckerfish Dropdowns脚本]]同时也提供了CSS和JavaScript的解决方案。

****** 描述列表：dl，dt，dd
       描述列表的构成：开始dl，紧跟一个术语dt,然后是任意数量的描述dd。一个典型的描述列表的样子：
       #+BEGIN_SRC html
       <dl>
         <dt>Bottle</dt>
         <dd>A receptable having a narrow neck, usually no handles, and a mouth that can be plugged,
         corked, or capped.</dd>
         <dd>To hold in; restrain: "bottled up my emotions."</dd>
         <dt>Rocket</dt>
         <dd>A vehicle or device propelled by one or more rocket engines, especially such a vehicle
         designed to travel through space.</dd>
       </dl>
       #+END_SRC
       一个定义术语只能包含语句内容，不能有文档流内容，所以不能使用段落、头部或这列表，这意味着属于不能有多层重用性，
       就像标题那样。但是，一个描述元素，可以包含任何文档流元素，或者其他元素的组合。
***** 图表、照片、图片：figure和figcaption
      figure元素的作用是表示图标、图片、代码等，并且可以自包含一个元素，为他们增加一个相关的标题（figcaption）。
      图表应该可以被移动和去除，而不影响文档的布局。
      例如：
      #+BEGIN_SRC html
      <figure>
        <img alt="Photograph of the Earth from space." src="earth.jpg" title="View of Earth"/>
        <img alt="Photograph of Mars from space." src="mars.jpg" title="View of Mars"/>
        <figcaption>The Earth and Mars shown side-by-side.</figcaption>
      </figure>
      #+END_SRC
***** 创建分块：div
      div（divsion）用来标记一块内容。他不会给内容增加特殊含义，而是为了使用CSS或JavaSrcipt。
**** 文本级语义元素（text-level semantics elements）
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | element | meta | flow | sectionin | heading | phrasing | embedded | interactive |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | a       |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | em      |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | strong  |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | small   |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | s       |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | cite    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | q       |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | dfn     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | abbr    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | time    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | code    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | var     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | samp    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | kbd     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | sub     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | sup     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | i       |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | b       |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | mark    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | ruby    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | rt      |      |      |           |         |          |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | rp      |      |      |           |         |          |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | bdi     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | dbo     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | span    |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | br      |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | wbr     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | ins     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
     | del     |      | *    |           |         | *        |          |             |
     |---------+------+------+-----------+---------+----------+----------+-------------|
**** 表格数据元素（tabular data elements）
     表格只是用来显示数据的，只是一个数据表，没有其他含义。
|----------+------+------+-----------+---------+----------+----------+-------------|
| element  | meta | flow | sectionin | heading | phrasing | embedded | interactive |
|----------+------+------+-----------+---------+----------+----------+-------------|
| table    |      | *    |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| caption  |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| colgroup |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| col      |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| tbody    |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| thead    |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| tfoot    |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| tr       |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| td       |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
| th       |      |      |           |         |          |          |             |
|----------+------+------+-----------+---------+----------+----------+-------------|
***** 表格基础
      一个表格的基本组成是：一个开始表格标签，紧跟着至少一行（tr），然后紧跟着的是至少一个表格单元（td，table data）。
      这是一个例子：
      #+BEGIN_SRC html
      <table>
        <tr>
          <td>Some data</td>
        </tr>
      </table>
      #+END_SRC
      下面的代码是一个两行两列的表格（i内嵌的style用来增加边框以区分表格的布局）
      #+BEGIN_SRC html
      <style type="text/css">
      td { boder: 1px solid #ff0000}
      </style>
      <table>
        <tr>
          <td>Name</td>
          <td>Place of residence</td>
        </tr>
        <tr>
          <td>Anselm Bradford</td>
          <td>Auckland</td>
        </tr>
        <tr>
          <td>Paul Haine</td>
          <td>Oxford</td>
        </tr>
      </table>
      #+END_SRC
****** 添加表头
       可以通过标记表格顶部的头部来指明列，是表格更加清晰和便于阅读。虽然可以在每个表格单元格中增加一个class，然后用
       CSS实现，但更好的方法是把表格上方的表格单元变成真正的表头，用th代替td。
       #+BEGIN_SRC html
       <table>
         <tr>
           <th>Name</th>
           <th>Place of residence</th>
         </tr>
       ...
       </table>
       #+END_SRC
****** 增加说明：caption
       紧跟在开始table标签之后:
       #+BEGIN_SRC html
       <table>
         <caption>Personal details</caption>
         <tr>
           <th>Name</th>
           <th>Place of residence</th>
         </tr>
       </table>
       #+END_SRC
****** 增加结构：thead、tfoot、tbody
       这些元素可以用于将行分组到表头部分、表尾部分和主题部分。
       和th元素很像，如果需要，这些元素可以为CSS和脚本提供钩子。而不必增加额外的class和ID。像caption一样，这些元素
       必须以特定的顺序和位置出现在表格内部。首先，如果使用三者中的任意一个，那么必须包含thead。这个元素可以出现在任
       何地方，但最好是紧接在开始的table标签后，除非也使用了caption，这时，thead元素应紧跟在他的后面。tfoot必须出
       现在tbody之前。tbody实际上是隐含的，如果使用thead，tfoot，就必须显式使用tbody。
       #+BEGIN_SRC html
       <table>
         <thead>
           <tr>
             <th>Name</th>
             <th>Place of residence</th>
           </tr>
         </thead>
         <tfoot>
           <tr>
             <th>Name</th>
             <th>Place of residence</th>
           </tr>
         </tfoot>
         <tbody>
           <tr>
             <td>Anselm Bradford</td>
             <td>Auckland</td>
           </tr>
           <tr>
             <td>Paul Haine</td>
             <td>Oxford</td>
           </tr>
         </tbody>
       </table>
       #+END_SRC
****** 更多结构：colgroup和col

**** 表单元素（form elements）
**** 内嵌内容元素（embedded content elements）
**** 交互元素（interactive elements）
